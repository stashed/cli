/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "kmodules.xyz/openshift/apis/security/v1"
)

// RunAsUserStrategyOptionsApplyConfiguration represents an declarative configuration of the RunAsUserStrategyOptions type for use
// with apply.
type RunAsUserStrategyOptionsApplyConfiguration struct {
	Type        *v1.RunAsUserStrategyType `json:"type,omitempty"`
	UID         *int64                    `json:"uid,omitempty"`
	UIDRangeMin *int64                    `json:"uidRangeMin,omitempty"`
	UIDRangeMax *int64                    `json:"uidRangeMax,omitempty"`
}

// RunAsUserStrategyOptionsApplyConfiguration constructs an declarative configuration of the RunAsUserStrategyOptions type for use with
// apply.
func RunAsUserStrategyOptions() *RunAsUserStrategyOptionsApplyConfiguration {
	return &RunAsUserStrategyOptionsApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *RunAsUserStrategyOptionsApplyConfiguration) WithType(value v1.RunAsUserStrategyType) *RunAsUserStrategyOptionsApplyConfiguration {
	b.Type = &value
	return b
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *RunAsUserStrategyOptionsApplyConfiguration) WithUID(value int64) *RunAsUserStrategyOptionsApplyConfiguration {
	b.UID = &value
	return b
}

// WithUIDRangeMin sets the UIDRangeMin field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UIDRangeMin field is set to the value of the last call.
func (b *RunAsUserStrategyOptionsApplyConfiguration) WithUIDRangeMin(value int64) *RunAsUserStrategyOptionsApplyConfiguration {
	b.UIDRangeMin = &value
	return b
}

// WithUIDRangeMax sets the UIDRangeMax field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UIDRangeMax field is set to the value of the last call.
func (b *RunAsUserStrategyOptionsApplyConfiguration) WithUIDRangeMax(value int64) *RunAsUserStrategyOptionsApplyConfiguration {
	b.UIDRangeMax = &value
	return b
}
